/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

// custom helpers
#include "zmk-helpers/helper.h"
#include "zmk-helpers/key-labels/42.h"
#include "zmk-helpers/unicode-chars/french.dtsi"
#include "zmk-helpers/unicode-chars/currency.dtsi"

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2   // thumbs

#define QUICK_TAP_MS 175

ZMK_TAP_DANCE(copy_cut, bindings = <&kp LC(INS)>, <&kp LC(X)>;
              tapping-term-ms = <150>;)
ZMK_COMBO(copy_cut, &copy_cut,   LB2 LB3, ALL)  // copy on tap, cut on double-tap, active on all layers
ZMK_COMBO(paste,    &kp LC(V), LB1 LB2, ALL)
ZMK_COMBO(undo ,    &kp LC(Z), LB4 LB3, ALL)
ZMK_COMBO(redo ,    &kp LC(LS(Z)), LB4 LB1, ALL)


ZMK_TAP_DANCE(desk1, bindings = <&kp N1>, <&kp LG(N1)>;
              tapping-term-ms = <200>;)
ZMK_TAP_DANCE(desk2, bindings = <&kp N2>, <&kp LG(N2)>;
              tapping-term-ms = <200>;)
ZMK_TAP_DANCE(desk3, bindings = <&kp N3>, <&kp LG(N3)>;
              tapping-term-ms = <200>;)
ZMK_TAP_DANCE(desk4, bindings = <&kp N4>, <&kp LG(N4)>;
              tapping-term-ms = <200>;)
ZMK_TAP_DANCE(desk5, bindings = <&kp N5>, <&kp LG(N5)>;
              tapping-term-ms = <200>;)

ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)

ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <QUICK_TAP_MS>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;
    bindings = <&kp>, <&kp>;
)


/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <RM1 RM2>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <27 33>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <25 41>;
        };

        goequal {
            bindings = <&goequal>;
            key-positions = <LM1 LM2>;
        };

        saveandquit {
            bindings = <&savequit>;
            key-positions = <LT3 LT4>;
        };
    };

    behaviors {
        caps: caps {
            compatible = "zmk,behavior-caps-word";
            label = "CAPS";
            #binding-cells = <0>;
            continue-list = <POUND MINUS BACKSPACE UNDERSCORE>;
        };
    };

    macros {
        goequal: goequal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp EQUAL>;
            label = "GOEQUAL";
        };

        savequit: savequit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp W &kp Q>;
            label = "SAVEQUIT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp TAB         &kp Q         &kp W         &kp E         &kp R         &kp T                                   &kp Y   &kp U            &kp I          &kp O          &kp P           &kp BSPC
&trans          &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHFT F  &kp G                                   &kp H   &hmr RSHFT J     &hmr LCTRL K   &hmr LALT L    &hmr LGUI SEMI  &trans
&trans          &kp Z         &kp X         &kp C         &kp V         &kp B   &kp C_MUTE    &kp C_PLAY_PAUSE  &kp N   &kp M            &kp COMMA      &kp DOT        &kp FSLH        &trans
                                                          &kp LGUI      &mo 1   &kp SPACE     &kp ENTER        &mo 2    &kp RSHFT      
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            display-name = "Symbols";
            bindings = <
&trans            &kp EXCL               &kp AT           &kp POUND          &kp DOLLAR  &kp PERCENT                           &kp CARET  &kp AMPERSAND  &kp ASTRK     &kp SLASH          &kp BACKSLASH  &kp F12
&kp LESS_THAN     &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp DOT     &kp COLON                             &kp UNDER  &kp PIPE       &kp EQUAL     &kp SINGLE_QUOTE   &trans         &trans
&kp GREATER_THAN  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp COMMA   &kp SEMI     &trans    &trans         &kp MINUS  &kp PLUS       &kp QUESTION  &kp DOUBLE_QUOTES  &trans         &trans
                                                                             &trans      &trans       &trans    &kp BACKSPACE  &trans     &trans         
            >;

        };

        raise_layer {
            display-name = "Nav";
            bindings = <
&trans  &kp N1      &kp N2     &kp N3       &trans       &trans                      &kp PG_UP  &trans    &kp UP    &trans     &trans   &trans
&trans  &kp N4      &kp N5     &kp N6       &trans       &trans                      &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans
&trans  &kp N7      &kp N8     &kp N9       &kp N0       &trans    &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                                            &trans       &trans    &trans    &trans  &trans     &trans   
            >;

        };

        adjust_layer {
            display-name = "System";
            bindings = <
&ext_power EP_TOG  &none         &none         &none         &none         &studio_unlock                  &none  &none  &none  &none  &none  &none
&none              &none         &none         &none         &none         &none                           &none  &none  &none  &none  &none  &none
&none              &none         &none         &none         &none         &caps_word      &none    &none  &none  &none  &none  &none  &none  &none
                                                             &none         &none           &none    &none  &none  &none  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
